name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: production
    
    #using env secrets is the prefered approach for CI/CD tools. AZ login only works for user accounts and not for service principals.
    env:
      ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
      ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
      GITHUB_OWNER: "${{ github.repository_owner }}"
      TF_VAR_repo_full_name: "${{ github.repository }}"

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    # An exit code of 2 indicates there were changes detected. We want to change those to 0 so the task doesn't appear as failed.
    - name: Terraform Plan
      run: terraform plan -detailed-exitcode -out tfplan || echo last code ${{ steps.tf-plan.outputs.exitcode }}
      id: tf-plan

    - name: Check Exit Code
      run: echo last code ${{ steps.tf-plan.outputs.exitcode }}

    # Save plan to artifacts  
    - name: Publish Terraform State
      uses: actions/upload-artifact@v2.2.4
      with:
        name: tfplan
        path: tfplan
      
    # If this is a PR post the changes

# If this isn't PR do a job to apply

#checkout 

#tf setup

#tf init

#download plan artifact

#tf apply
